import json
from pathlib import Path

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª–∞–º
ROOT = Path(__file__).parent.parent
BENCHMARK_PATH = ROOT / "benchmarks" / "benchmark.json"
MAPPING_PATH = ROOT / "benchmarks" / "doc_id_mapping.json"
OUTPUT_PATH = ROOT / "benchmarks" / "benchmark_annotated.json"

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
with open(BENCHMARK_PATH, "r", encoding="utf-8") as f:
    benchmark = json.load(f)

with open(MAPPING_PATH, "r", encoding="utf-8") as f:
    doc_mapping = json.load(f)

# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —É–¥–æ–±–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç: {question_id: [doc_ids]}
# –õ–æ–≥–∏–∫–∞: –±–µ—Ä—ë–º —Ç–æ–ø-1 –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –∫–∞–∫ —ç—Ç–∞–ª–æ–Ω
qid_to_docs = {}

for doc_id, info in doc_mapping.items():
    for qid in info["found_in_questions"]:
        if qid not in qid_to_docs:
            qid_to_docs[qid] = []
        qid_to_docs[qid].append(doc_id)

print("=" * 70)
print("üìã –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –†–ê–ó–ú–ï–¢–ö–ê relevant_docs")
print("=" * 70)

if isinstance(benchmark, dict) and "questions" in benchmark:
    questions = benchmark["questions"]
else:
    questions = benchmark

annotated = []
for q in questions:
    qid = q.get("question_id", "")

    # –ë–µ—Ä—ë–º –ü–ï–†–í–´–ô –Ω–∞–π–¥–µ–Ω–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –∫–∞–∫ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π (–º–æ–∂–Ω–æ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å –ª–æ–≥–∏–∫—É)
    relevant = qid_to_docs.get(qid, [])[:1]  # –¢–æ–ø-1 –¥–æ–∫—É–º–µ–Ω—Ç

    q["relevant_docs"] = relevant
    annotated.append(q)

    print(f"\n{qid}: {q['question'][:60]}...")
    print(f"   ‚úÖ –†–∞–∑–º–µ—á–µ–Ω–æ: {relevant}")

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
output_data = {"questions": annotated} if isinstance(benchmark, dict) and "questions" in benchmark else annotated

with open(OUTPUT_PATH, "w", encoding="utf-8") as f:
    json.dump(output_data, f, ensure_ascii=False, indent=2)

print("\n" + "=" * 70)
print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {OUTPUT_PATH}")
print("=" * 70)
print("\n‚ö†Ô∏è –í–ê–ñ–ù–û: –≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞–∑–º–µ—Ç–∫–∞ (—Ç–æ–ø-1 –¥–æ–∫—É–º–µ–Ω—Ç)!")
print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Ä—É—á–Ω—É—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–∞–∂–¥–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ —ç—Ç–∞–ª–æ–Ω–Ω–æ–º—É –æ—Ç–≤–µ—Ç—É!")
print(f"\n–î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ:\n  - {OUTPUT_PATH}\n  - {MAPPING_PATH}")
