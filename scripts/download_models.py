import sys

from pathlib import Path

project_root = Path(__file__).parent.parent.absolute()
sys.path.insert(0, str(project_root))


def download_whisper_models():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–µ–π Faster-Whisper."""
    from faster_whisper import WhisperModel

    print("=" * 70)
    print("–ó–ê–ì–†–£–ó–ö–ê FASTER-WHISPER –ú–û–î–ï–õ–ï–ô")
    print("=" * 70)

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑–º–µ—Ä–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞
    models_to_download = [
        ("base", "cpu", "int8"),  # –ë—ã—Å—Ç—Ä–∞—è, –¥–ª—è —Ç–µ—Å—Ç–æ–≤
        ("medium", "cpu", "int8"),  # –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –¥–ª—è production
    ]

    for model_size, device, compute_type in models_to_download:
        print(f"\nüì• –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏: {model_size} ({device}/{compute_type})")

        try:
            model = WhisperModel(
                model_size,
                device=device,
                compute_type=compute_type,
                download_root=None  # –°–æ—Ö—Ä–∞–Ω–∏—Ç –≤ ~/.cache/huggingface/hub
            )
            print(f"‚úÖ –ú–æ–¥–µ–ª—å {model_size} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")

            # –¢–µ—Å—Ç–∏—Ä—É–µ–º
            print(f"   –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...")
            import numpy as np
            test_audio = np.zeros(16000, dtype=np.float32)  # 1 —Å–µ–∫—É–Ω–¥–∞ —Ç–∏—à–∏–Ω—ã
            segments, info = model.transcribe(test_audio, language="ru")
            list(segments)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
            print(f"   ‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ {model_size}: {e}")


def download_silero_models():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–µ–π Silero TTS."""
    import torch

    print("\n" + "=" * 70)
    print("–ó–ê–ì–†–£–ó–ö–ê SILERO TTS –ú–û–î–ï–õ–ï–ô")
    print("=" * 70)

    try:
        print("\nüì• –ó–∞–≥—Ä—É–∑–∫–∞ Silero TTS –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞...")

        model, symbols, sample_rate, example_text, apply_tts = torch.hub.load(
            repo_or_dir='snakers4/silero-models',
            model='silero_tts',
            language='ru',
            speaker='xenia'
        )

        print(f"‚úÖ Silero TTS –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
        print(f"   –ß–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏: {sample_rate} Hz")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º
        print(f"   –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏–Ω—Ç–µ–∑–∞...")
        audio = apply_tts(
            texts=["–¢–µ—Å—Ç"],
            model=model,
            sample_rate=sample_rate,
            symbols=symbols,
            device="cpu"
        )
        print(f"   ‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω: —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ {len(audio)} —Å—ç–º–ø–ª–æ–≤")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Silero: {e}")

if __name__ == "__main__":
    main()